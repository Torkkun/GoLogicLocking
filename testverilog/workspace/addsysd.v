/* Generated by Yosys 0.38+141 (git sha1 078b876f5, clang++ 14.0.0-1ubuntu1.1 -fPIC -Os) */

module muladd(ap_clk, ap_rst_n, s_axi_control_AWVALID, s_axi_control_AWREADY, s_axi_control_AWADDR, s_axi_control_WVALID, s_axi_control_WREADY, s_axi_control_WDATA, s_axi_control_WSTRB, s_axi_control_ARVALID, s_axi_control_ARREADY, s_axi_control_ARADDR, s_axi_control_RVALID, s_axi_control_RREADY, s_axi_control_RDATA, s_axi_control_RRESP, s_axi_control_BVALID, s_axi_control_BREADY, s_axi_control_BRESP, interrupt);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire [3:0] _005_;
  wire [3:0] _006_;
  wire [1:0] _007_;
  wire [1:0] _008_;
  wire [31:0] _009_;
  wire [31:0] _010_;
  wire [31:0] _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire [3:0] a_address0;
  wire a_ce0;
  wire [31:0] a_q0;
  reg [1:0] ap_CS_fsm = 2'h1;
  wire ap_CS_fsm_state1;
  wire ap_CS_fsm_state2;
  wire [1:0] ap_NS_fsm;
  wire ap_ST_fsm_state2_blk;
  input ap_clk;
  wire ap_clk;
  wire ap_done;
  wire ap_idle;
  wire ap_ready;
  wire [31:0] ap_return;
  input ap_rst_n;
  wire ap_rst_n;
  wire ap_rst_n_inv;
  wire ap_start;
  wire [3:0] b_address0;
  wire b_ce0;
  wire [31:0] b_q0;
  output interrupt;
  wire interrupt;
  input [7:0] s_axi_control_ARADDR;
  wire [7:0] s_axi_control_ARADDR;
  output s_axi_control_ARREADY;
  wire s_axi_control_ARREADY;
  input s_axi_control_ARVALID;
  wire s_axi_control_ARVALID;
  input [7:0] s_axi_control_AWADDR;
  wire [7:0] s_axi_control_AWADDR;
  output s_axi_control_AWREADY;
  wire s_axi_control_AWREADY;
  input s_axi_control_AWVALID;
  wire s_axi_control_AWVALID;
  input s_axi_control_BREADY;
  wire s_axi_control_BREADY;
  output [1:0] s_axi_control_BRESP;
  wire [1:0] s_axi_control_BRESP;
  output s_axi_control_BVALID;
  wire s_axi_control_BVALID;
  output [31:0] s_axi_control_RDATA;
  wire [31:0] s_axi_control_RDATA;
  input s_axi_control_RREADY;
  wire s_axi_control_RREADY;
  output [1:0] s_axi_control_RRESP;
  wire [1:0] s_axi_control_RRESP;
  output s_axi_control_RVALID;
  wire s_axi_control_RVALID;
  input [31:0] s_axi_control_WDATA;
  wire [31:0] s_axi_control_WDATA;
  output s_axi_control_WREADY;
  wire s_axi_control_WREADY;
  input [3:0] s_axi_control_WSTRB;
  wire [3:0] s_axi_control_WSTRB;
  input s_axi_control_WVALID;
  wire s_axi_control_WVALID;
  always @(posedge ap_clk)
    if (!ap_rst_n) ap_CS_fsm[0] <= 1'h1;
    else ap_CS_fsm[0] <= ap_NS_fsm[0];
  always @(posedge ap_clk)
    if (!ap_rst_n) ap_CS_fsm[1] <= 1'h0;
    else ap_CS_fsm[1] <= ap_NS_fsm[1];
  assign _000_ = ~ap_CS_fsm[0];
  assign _001_ = ~ap_CS_fsm[1];
  assign _002_ = _000_ | ap_CS_fsm[1];
  assign _003_ = ap_CS_fsm[0] | _001_;
  assign _008_[0] = _006_[0] | _006_[2];
  assign _012_ = _006_[0] | _007_[1];
  assign _007_[1] = ~_002_;
  assign _006_[0] = ~_003_;
  assign _005_[2] = ~a_ce0;
  assign ap_NS_fsm[0] = _012_ ? _008_[0] : 1'hx;
  assign ap_NS_fsm[1] = _012_ ? _006_[3] : 1'hx;
  assign _004_ = ~ap_start;
  assign ap_rst_n_inv = ~ap_rst_n;
  assign ap_idle = _004_ & ap_CS_fsm[0];
  assign a_ce0 = ap_start & ap_CS_fsm[0];
  assign _006_[2] = _005_[2] & _007_[1];
  assign _006_[3] = a_ce0 & _007_[1];
  assign ap_return[1] = _010_[1] ^ _009_[0];
  assign ap_return[2] = _010_[2] ^ _009_[1];
  assign ap_return[3] = _010_[3] ^ _009_[2];
  assign ap_return[4] = _010_[4] ^ _009_[3];
  assign ap_return[5] = _010_[5] ^ _009_[4];
  assign ap_return[6] = _010_[6] ^ _009_[5];
  assign ap_return[7] = _010_[7] ^ _009_[6];
  assign ap_return[8] = _010_[8] ^ _009_[7];
  assign ap_return[9] = _010_[9] ^ _009_[8];
  assign ap_return[10] = _010_[10] ^ _009_[9];
  assign ap_return[11] = _010_[11] ^ _009_[10];
  assign ap_return[12] = _010_[12] ^ _009_[11];
  assign ap_return[13] = _010_[13] ^ _009_[12];
  assign ap_return[14] = _010_[14] ^ _009_[13];
  assign ap_return[15] = _010_[15] ^ _009_[14];
  assign ap_return[16] = _010_[16] ^ _009_[15];
  assign ap_return[17] = _010_[17] ^ _009_[16];
  assign ap_return[18] = _010_[18] ^ _009_[17];
  assign ap_return[19] = _010_[19] ^ _009_[18];
  assign ap_return[20] = _010_[20] ^ _009_[19];
  assign ap_return[21] = _010_[21] ^ _009_[20];
  assign ap_return[22] = _010_[22] ^ _009_[21];
  assign ap_return[23] = _010_[23] ^ _009_[22];
  assign ap_return[24] = _010_[24] ^ _009_[23];
  assign ap_return[25] = _010_[25] ^ _009_[24];
  assign ap_return[26] = _010_[26] ^ _009_[25];
  assign ap_return[27] = _010_[27] ^ _009_[26];
  assign ap_return[28] = _010_[28] ^ _009_[27];
  assign ap_return[29] = _010_[29] ^ _009_[28];
  assign ap_return[30] = _010_[30] ^ _009_[29];
  assign ap_return[31] = _010_[31] ^ _009_[30];
  assign ap_return[0] = a_q0[0] ^ b_q0[0];
  assign _010_[1] = a_q0[1] ^ b_q0[1];
  assign _010_[2] = a_q0[2] ^ b_q0[2];
  assign _010_[3] = a_q0[3] ^ b_q0[3];
  assign _010_[4] = a_q0[4] ^ b_q0[4];
  assign _010_[5] = a_q0[5] ^ b_q0[5];
  assign _010_[6] = a_q0[6] ^ b_q0[6];
  assign _010_[7] = a_q0[7] ^ b_q0[7];
  assign _010_[8] = a_q0[8] ^ b_q0[8];
  assign _010_[9] = a_q0[9] ^ b_q0[9];
  assign _010_[10] = a_q0[10] ^ b_q0[10];
  assign _010_[11] = a_q0[11] ^ b_q0[11];
  assign _010_[12] = a_q0[12] ^ b_q0[12];
  assign _010_[13] = a_q0[13] ^ b_q0[13];
  assign _010_[14] = a_q0[14] ^ b_q0[14];
  assign _010_[15] = a_q0[15] ^ b_q0[15];
  assign _010_[16] = a_q0[16] ^ b_q0[16];
  assign _010_[17] = a_q0[17] ^ b_q0[17];
  assign _010_[18] = a_q0[18] ^ b_q0[18];
  assign _010_[19] = a_q0[19] ^ b_q0[19];
  assign _010_[20] = a_q0[20] ^ b_q0[20];
  assign _010_[21] = a_q0[21] ^ b_q0[21];
  assign _010_[22] = a_q0[22] ^ b_q0[22];
  assign _010_[23] = a_q0[23] ^ b_q0[23];
  assign _010_[24] = a_q0[24] ^ b_q0[24];
  assign _010_[25] = a_q0[25] ^ b_q0[25];
  assign _010_[26] = a_q0[26] ^ b_q0[26];
  assign _010_[27] = a_q0[27] ^ b_q0[27];
  assign _010_[28] = a_q0[28] ^ b_q0[28];
  assign _010_[29] = a_q0[29] ^ b_q0[29];
  assign _010_[30] = a_q0[30] ^ b_q0[30];
  assign _010_[31] = a_q0[31] ^ b_q0[31];
  assign _009_[0] = a_q0[0] & b_q0[0];
  assign _011_[1] = a_q0[1] & b_q0[1];
  assign _011_[2] = a_q0[2] & b_q0[2];
  assign _011_[3] = a_q0[3] & b_q0[3];
  assign _011_[4] = a_q0[4] & b_q0[4];
  assign _011_[5] = a_q0[5] & b_q0[5];
  assign _011_[6] = a_q0[6] & b_q0[6];
  assign _011_[7] = a_q0[7] & b_q0[7];
  assign _011_[8] = a_q0[8] & b_q0[8];
  assign _011_[9] = a_q0[9] & b_q0[9];
  assign _011_[10] = a_q0[10] & b_q0[10];
  assign _011_[11] = a_q0[11] & b_q0[11];
  assign _011_[12] = a_q0[12] & b_q0[12];
  assign _011_[13] = a_q0[13] & b_q0[13];
  assign _011_[14] = a_q0[14] & b_q0[14];
  assign _011_[15] = a_q0[15] & b_q0[15];
  assign _011_[16] = a_q0[16] & b_q0[16];
  assign _011_[17] = a_q0[17] & b_q0[17];
  assign _011_[18] = a_q0[18] & b_q0[18];
  assign _011_[19] = a_q0[19] & b_q0[19];
  assign _011_[20] = a_q0[20] & b_q0[20];
  assign _011_[21] = a_q0[21] & b_q0[21];
  assign _011_[22] = a_q0[22] & b_q0[22];
  assign _011_[23] = a_q0[23] & b_q0[23];
  assign _011_[24] = a_q0[24] & b_q0[24];
  assign _011_[25] = a_q0[25] & b_q0[25];
  assign _011_[26] = a_q0[26] & b_q0[26];
  assign _011_[27] = a_q0[27] & b_q0[27];
  assign _011_[28] = a_q0[28] & b_q0[28];
  assign _011_[29] = a_q0[29] & b_q0[29];
  assign _011_[30] = a_q0[30] & b_q0[30];
  assign _013_ = _010_[1] & _009_[0];
  assign _014_ = _010_[3] & _011_[2];
  assign _015_ = _010_[5] & _011_[4];
  assign _016_ = _010_[7] & _011_[6];
  assign _017_ = _010_[9] & _011_[8];
  assign _018_ = _010_[11] & _011_[10];
  assign _019_ = _010_[13] & _011_[12];
  assign _020_ = _010_[15] & _011_[14];
  assign _021_ = _010_[17] & _011_[16];
  assign _022_ = _010_[19] & _011_[18];
  assign _023_ = _010_[21] & _011_[20];
  assign _024_ = _010_[23] & _011_[22];
  assign _025_ = _010_[25] & _011_[24];
  assign _026_ = _010_[27] & _011_[26];
  assign _027_ = _010_[29] & _011_[28];
  assign _028_ = _039_ & _009_[1];
  assign _029_ = _041_ & _088_;
  assign _030_ = _043_ & _090_;
  assign _031_ = _045_ & _092_;
  assign _032_ = _047_ & _094_;
  assign _033_ = _049_ & _096_;
  assign _034_ = _051_ & _098_;
  assign _035_ = _053_ & _009_[3];
  assign _036_ = _055_ & _102_;
  assign _037_ = _057_ & _104_;
  assign _038_ = _059_ & _009_[7];
  assign _039_ = _010_[3] & _010_[2];
  assign _040_ = _010_[5] & _010_[4];
  assign _041_ = _010_[7] & _010_[6];
  assign _042_ = _010_[9] & _010_[8];
  assign _043_ = _010_[11] & _010_[10];
  assign _044_ = _010_[13] & _010_[12];
  assign _045_ = _010_[15] & _010_[14];
  assign _046_ = _010_[17] & _010_[16];
  assign _047_ = _010_[19] & _010_[18];
  assign _048_ = _010_[21] & _010_[20];
  assign _049_ = _010_[23] & _010_[22];
  assign _050_ = _010_[25] & _010_[24];
  assign _051_ = _010_[27] & _010_[26];
  assign _052_ = _010_[29] & _010_[28];
  assign _053_ = _041_ & _040_;
  assign _054_ = _043_ & _042_;
  assign _055_ = _045_ & _044_;
  assign _056_ = _047_ & _046_;
  assign _057_ = _049_ & _048_;
  assign _058_ = _051_ & _050_;
  assign _059_ = _055_ & _054_;
  assign _060_ = _057_ & _056_;
  assign _061_ = _060_ & _009_[15];
  assign _062_ = _054_ & _009_[7];
  assign _063_ = _056_ & _009_[15];
  assign _064_ = _058_ & _009_[23];
  assign _065_ = _040_ & _009_[3];
  assign _066_ = _042_ & _009_[7];
  assign _067_ = _044_ & _009_[11];
  assign _068_ = _046_ & _009_[15];
  assign _069_ = _048_ & _009_[19];
  assign _070_ = _050_ & _009_[23];
  assign _071_ = _052_ & _009_[27];
  assign _072_ = _010_[2] & _009_[1];
  assign _073_ = _010_[4] & _009_[3];
  assign _074_ = _010_[6] & _009_[5];
  assign _075_ = _010_[8] & _009_[7];
  assign _076_ = _010_[10] & _009_[9];
  assign _077_ = _010_[12] & _009_[11];
  assign _078_ = _010_[14] & _009_[13];
  assign _079_ = _010_[16] & _009_[15];
  assign _080_ = _010_[18] & _009_[17];
  assign _081_ = _010_[20] & _009_[19];
  assign _082_ = _010_[22] & _009_[21];
  assign _083_ = _010_[24] & _009_[23];
  assign _084_ = _010_[26] & _009_[25];
  assign _085_ = _010_[28] & _009_[27];
  assign _086_ = _010_[30] & _009_[29];
  assign _009_[1] = _011_[1] | _013_;
  assign _087_ = _011_[3] | _014_;
  assign _088_ = _011_[5] | _015_;
  assign _089_ = _011_[7] | _016_;
  assign _090_ = _011_[9] | _017_;
  assign _091_ = _011_[11] | _018_;
  assign _092_ = _011_[13] | _019_;
  assign _093_ = _011_[15] | _020_;
  assign _094_ = _011_[17] | _021_;
  assign _095_ = _011_[19] | _022_;
  assign _096_ = _011_[21] | _023_;
  assign _097_ = _011_[23] | _024_;
  assign _098_ = _011_[25] | _025_;
  assign _099_ = _011_[27] | _026_;
  assign _100_ = _011_[29] | _027_;
  assign _009_[3] = _087_ | _028_;
  assign _101_ = _089_ | _029_;
  assign _102_ = _091_ | _030_;
  assign _103_ = _093_ | _031_;
  assign _104_ = _095_ | _032_;
  assign _105_ = _097_ | _033_;
  assign _106_ = _099_ | _034_;
  assign _009_[7] = _101_ | _035_;
  assign _107_ = _103_ | _036_;
  assign _108_ = _105_ | _037_;
  assign _009_[15] = _107_ | _038_;
  assign _009_[23] = _108_ | _061_;
  assign _009_[11] = _102_ | _062_;
  assign _009_[19] = _104_ | _063_;
  assign _009_[27] = _106_ | _064_;
  assign _009_[5] = _088_ | _065_;
  assign _009_[9] = _090_ | _066_;
  assign _009_[13] = _092_ | _067_;
  assign _009_[17] = _094_ | _068_;
  assign _009_[21] = _096_ | _069_;
  assign _009_[25] = _098_ | _070_;
  assign _009_[29] = _100_ | _071_;
  assign _009_[2] = _011_[2] | _072_;
  assign _009_[4] = _011_[4] | _073_;
  assign _009_[6] = _011_[6] | _074_;
  assign _009_[8] = _011_[8] | _075_;
  assign _009_[10] = _011_[10] | _076_;
  assign _009_[12] = _011_[12] | _077_;
  assign _009_[14] = _011_[14] | _078_;
  assign _009_[16] = _011_[16] | _079_;
  assign _009_[18] = _011_[18] | _080_;
  assign _009_[20] = _011_[20] | _081_;
  assign _009_[22] = _011_[22] | _082_;
  assign _009_[24] = _011_[24] | _083_;
  assign _009_[26] = _011_[26] | _084_;
  assign _009_[28] = _011_[28] | _085_;
  assign _009_[30] = _011_[30] | _086_;
  muladd_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH(32'sd8),
    .C_S_AXI_DATA_WIDTH(32'sd32)
  ) control_s_axi_U (
    .ACLK(ap_clk),
    .ACLK_EN(1'h1),
    .ARADDR(s_axi_control_ARADDR),
    .ARESET(ap_rst_n_inv),
    .ARREADY(s_axi_control_ARREADY),
    .ARVALID(s_axi_control_ARVALID),
    .AWADDR(s_axi_control_AWADDR),
    .AWREADY(s_axi_control_AWREADY),
    .AWVALID(s_axi_control_AWVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .BVALID(s_axi_control_BVALID),
    .RDATA(s_axi_control_RDATA),
    .RREADY(s_axi_control_RREADY),
    .RRESP(s_axi_control_RRESP),
    .RVALID(s_axi_control_RVALID),
    .WDATA(s_axi_control_WDATA),
    .WREADY(s_axi_control_WREADY),
    .WSTRB(s_axi_control_WSTRB),
    .WVALID(s_axi_control_WVALID),
    .a_address0(4'hf),
    .a_ce0(a_ce0),
    .a_q0(a_q0),
    .ap_done(ap_CS_fsm[1]),
    .ap_idle(ap_idle),
    .ap_ready(ap_CS_fsm[1]),
    .ap_return(ap_return),
    .ap_start(ap_start),
    .b_address0(4'hf),
    .b_ce0(a_ce0),
    .b_q0(b_q0),
    .interrupt(interrupt)
  );
  assign { _005_[3], _005_[1:0] } = { a_ce0, 2'h1 };
  assign _006_[1] = 1'h0;
  assign _007_[0] = _006_[0];
  assign _008_[1] = _006_[3];
  assign _010_[0] = ap_return[0];
  assign _011_[0] = _009_[0];
  assign a_address0 = 4'hf;
  assign ap_CS_fsm_state1 = ap_CS_fsm[0];
  assign ap_CS_fsm_state2 = ap_CS_fsm[1];
  assign ap_ST_fsm_state2_blk = 1'h0;
  assign ap_done = ap_CS_fsm[1];
  assign ap_ready = ap_CS_fsm[1];
  assign b_address0 = 4'hf;
  assign b_ce0 = a_ce0;
endmodule
